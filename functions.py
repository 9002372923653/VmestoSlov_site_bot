import json
import requests
import re
import os
import random
def generate_chat_id():
    return random.randint(100000, 999999)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –æ—Ç 100000 –¥–æ 999999

from openai import OpenAI
from prompts import formatter_prompt, assistant_instructions

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
AIRTABLE_API_KEY = os.getenv("AIRTABLE_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API-–∫–ª—é—á–∞
print(f"AIRTABLE_API_KEY: {AIRTABLE_API_KEY}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API-–∫–ª—é—á–µ–π
if not OPENAI_API_KEY:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
if not AIRTABLE_API_KEY:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è AIRTABLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
client = OpenAI(api_key=OPENAI_API_KEY)
AIRTABLE_BASE_ID = "YOUR_BASE_ID"  # –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π Base ID
AIRTABLE_TABLE_NAME = "YOUR_TABLE_NAME"  # –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
def process_contact_data(data):
    name_pattern = r"[–ê-–Ø–∞-—èA-Za-z]+(?:\s[–ê-–Ø–∞-—èA-Za-z]+)?"
    phone_pattern = r"\+?\d{10,15}"
    service_pattern = r"(?:–±—É–∫–µ—Ç|—Ü–≤–µ—Ç—ã|–∫–æ–º–ø–æ–∑–∏—Ü–∏—è|–ø–æ–≤–æ–¥|—Å–≤–∞–¥—å–±–∞|—é–±–∏–ª–µ–π).*?"
    amount_pattern = r"\b\d{3,8}\b"

    name = re.search(name_pattern, data)
    phone = re.search(phone_pattern, data)
    service = re.search(service_pattern, data)
    amount = re.search(amount_pattern, data)

    return (
        name.group(0) if name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        phone.group(0) if phone else "–ù–µ —É–∫–∞–∑–∞–Ω",
        service.group(0) if service else "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
        int(amount.group(0)) if amount else 0
    )

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–¥–∞ –≤ Airtable
def create_lead(name, phone, service, amount):
    chat_id = generate_chat_id()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è Airtable: {chat_id}, {name}, {phone}, {service}, {amount}")  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    url = f"https://api.airtable.com/v0/appVoeCexAh2D0WmI/Table%201"
    headers = {
        "Authorization": f"Bearer {AIRTABLE_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "fields": {
            "chat_id": str(chat_id),
            "Name": name,
            "Phone": phone,
            "Service": service,
            "Amount of money": amount
        }
    }

    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Airtable: {json.dumps(data, indent=2, ensure_ascii=False)}")  # –ü—Ä–æ–≤–µ—Ä–∫–∞ JSON
    
    response = requests.post(url, json=data, headers=headers)
    print(f"üîç –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    print(f"üîç –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
    if response.status_code in [200, 201]:  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è —É—á—ë—Ç–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–æ–¥–∞ 201
        print("‚úÖ –õ–∏–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Airtable!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: {response.text}")
    return response.json()

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
def create_assistant(client):
    assistant_file_path = 'assistant.json'
    if os.path.exists(assistant_file_path):
        with open(assistant_file_path, 'r') as file:
            assistant_data = json.load(file)
            return assistant_data[asst_si51TxBCRS5x5zenOIzZGViv]

    knowledge_base_files = ["VmestoSlov_bot_baze.docx"]
    file_ids = []
    for file_path in knowledge_base_files:
        with open(file_path, "rb") as f:  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤
            file = client.files.create(file=f, purpose='assistants')
            file_ids.append(file.id)

    vector_store = client.beta.vector_stores.create(
        name="Vmesto_slov_Vector_store", file_ids=file_ids
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    # ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
    assistant_id = "asst_si51TxBCRS5x5zenOIzZGViv"  # ‚Üê –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å ID: {assistant_id}")
    return assistant_id

